#!/bin/sh

API_TOKEN=""      # Your API Token
ZONE_ID=""        # Your zone id, hex16 string
RECORD_NAME=""    # Your DNS record name, e.g. sub.example.com
RECORD_TTL="1"    # TTL in seconds (1=auto)

get_dns_record_ids() {
  local record_name=$1
  local type=$2
  local api_token=$3
  local zone_id=$4

  RESPONSE="$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/${zone_id}/dns_records?type=${type}&name=${record_name}" \
    -H "Authorization: Bearer ${api_token}" \
    -H "Content-Type:application/json")"

  echo $RESPONSE |jq '.result[0].id'
  echo $RESPONSE |jq '.result[0].content'
}

update_dns_record() {
  local record_name=$1
  local record_id=$2
  local type=$3
  local ip=$4
  local record_ttl=$5
  local api_token=$6
  local zone_id=$7

  curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/${zone_id}/dns_records/${record_id}" \
    -H "Authorization: Bearer ${api_token}" \
    -H "Content-Type: application/json" \
    --data "{\"type\":\"${type}\",\"name\":\"${record_name}\",\"content\":\"${ip}\",\"ttl\":${record_ttl},\"proxied\":false}"
}

RESULT=true

# Update IPv4
#Get IPv4 from Router otherwise from external source
IPv4=${1}
if [ -z "$IPv4" ]; then
  IPv4="$(ip addr show ppp0 |grep inet |awk '{print $2}')"
  logger "IP ${IPv4} obtained external source $IP_QUERY_SITE"
else
  logger "IP ${IPv4} obtained by router"
fi

A_ID_AND_IP=$(get_dns_record_ids $RECORD_NAME A $API_TOKEN $ZONE_ID)

echo $A_ID_AND_IP | tr -d '"' | {
    read dnsId dnsIp
   if [ "$dnsIp" == "$IPv4" ]; then
      logger "DNS IP $IPv4 is not be change"
      RESULT=true
    else
      RESPONSE="$(update_dns_record $RECORD_NAME $dnsId A $IPv4 $RECORD_TTL $API_TOKEN $ZONE_ID)"
      echo $RESPONSE | grep '"success":\ *true' >/dev/null

      if [ $? -eq 0 ]; then
        logger "Updated A record for ${RECORD_NAME} to ${IPv4}"
      else
        logger "Unable to update A record for ${RECORD_NAME} with ${IPv4}"
        logger "Response is $RESPONSE"
        RESULT=false
      fi
   fi 
}



if [ "$RESULT" == true ]; then
  /sbin/ddns_updated 1
else
  /sbin/ddns_updated 0
fi
